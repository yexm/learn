"""
@Project: gitcode
@File : word.py
@Author : yexm
@E-mail : yexingmin06221@126.com
@Date : 2019-04-07 20:53:04
"""
from jieba import analyse

# 引入TF-IDF关键词抽取接口
extract_tags = analyse.extract_tags

# 原始文本
# text = "线程是程序执行时的最小单位,它是进程的一个执行流,\
#             是CPU调度和分派的基本单位,一个进程可以由很多个线程组成,\
#             线程间共享进程的所有资源,每个线程有自己的堆栈和局部变量。\
#             线程由CPU独立调度执行,在多CPU环境下就允许多个线程同时运行。\
#             同样多线程也可以实现并发操作,每个请求分配一个线程来处理。" + "执行"*100
# text = u"关键词抽取就是从文本里面把跟这篇文档意义最相关的一些词抽取出来。" \
#        u"这个可以追溯到文献检索初期,当时还不支持全文搜索的时候,关键词就可以作为搜索这篇论文的词语。" \
#        u"因此,目前依然可以在论文中看到关键词这一项。" \
#        u"除了这些,关键词还可以在文本聚类、分类、自动摘要等领域中有着重要的作用。" \
#        u"比如在聚类时将关键词相似的几篇文档看成一个团簇,可以大大提高聚类算法的收敛速度;" \
#        u"从某天所有的新闻中提取出这些新闻的关键词,就可以大致了解那天发生了什么事情:" \
#        u"或者将某段时间内几个人的微博拼成一篇长文本,然后抽取关键词就可以知道他们主要在讨论什么话题。" \
#        u"总之,关键词就是最能够反映出文本主题或者意思的词语。" \
#        u"但是网络上写文章的人不会像写论文那样告诉你本文的关键词是什么,这个时候就需要利用计算机自动抽取出关键词,算法的好坏直接决定了后续步骤的效果。" \
#        u"关键词抽取从方法来说大致有两种:-" \
#        u" 第一种是关键词分配,就是有一个给定的关键词库,然后新来一篇文档,从词库里面找出几个词语作为这篇文档的关键词；- " \
#        u"第二种是关键词抽取,就是新来一篇文档,从文档中抽取一些词语作为这篇文档的关键词:" \
#        u"目前大多数领域无关的关键词抽取算法（领域无关算法的意思就是无论什么主题或者领域的文本都可以抽取关键词的算法）和它对应的库都是基于后者的。" \
#        u"从逻辑上说,后者比前着在实际使用中更有意义。" \
#        u"从算法的角度来看,关键词抽取算法主要有两类:" \
#        u"- 有监督学习算法,将关键词抽取过程视为二分类问题,先抽取出候选词,然后对于每个候选词划定标签,要么是关键词,要么不是关键词,然后训练关键词抽取分类器。" \
#        u"当新来一篇文档时,抽取出所有的候选词,然后利用训练好的关键词抽取分类器,对各个候选词进行分类,最终将标签为关键词的候选词作为关键词；" \
#        u"- 无监督学习算法,先抽取出候选词,然后对各个候选词进行打分,然后输出topK个分值最高的候选词作为关键词。" \
#        u"根据打分的策略不同,有不同的算法；" \
#        u"例如TF-IDF,TextRank等算法；jieba分词系统中实现了两种关键词抽取算法," \
#        u"分别是基于TF-IDF关键词抽取算法和基于TextRank关键词抽取算法,两类算法均是无监督学习的算法," \
#        u"下面将会通过实例讲解介绍如何使用jieba分词的关键词抽取接口以及通过源码讲解其实现的原理"

# text = "今天，外公带我去看妹妹游泳。" \
#        "到了婴儿游泳馆，妹妹的妈妈把妹妹的衣服脱了后，在妹妹身上带上游泳圈，就把妹妹放进小小游泳池。" \
#        "妹妹可喜欢水了，到水里，就欢快地游起来。" \
#        "妹妹的双腿在水中乱蹬，就像发动机，让妹妹在水里转来转去。" \
#        "过了一会儿，妹妹累了，于是就在水里一动不动，闭上了眼睛，做出一副很享受的样子，就像一只浮在水面的大白鹅，又好像自己在沙滩上晒日光浴。" \
#        "又过了一会儿，妹妹歇够了，又开始了表演，一会儿扭扭身子，像在跳水中芭蕾，一会儿双手挥挥，像游泳得了世界冠军，在向大家挥手。　" \
#        "妹妹游得可真漂亮呀，我和外公都说妹妹长大一定了可以当游泳冠军!"

text = "今天下午，我上完我最喜欢的吉他课后，飞快地走出少年宫，开开心心地向我的自行车走去。走到车前，才发现车链子竟然掉了。车链子怎么会掉呢?我骑过来时还是好好的呀!……一个接一个的问号从我脑袋里蹦出来，算了，还是想该怎么办吧!" \
       "　　终于想出了两个办法，一个是把车子搬回家，然后让爸爸来修;" \
       "另一个是自己把车直接修好，再骑回家。想了一会儿，决定还是自己修修吧，我可不想搬车。我先找了一根小木棍，然后努力想爸爸平时怎样上链条的，以及《生活大百科》上写的怎样上链条。" \
       "想了一会儿，我按书上的，先用木棍把一边的链条挑到齿轮上，然后把后轮抬起来转动脚蹬，脚蹬不动，我用力转脚蹬，费了九牛二虎之力，脚蹬才慢慢的动了起来，“碦碦碦”几声后，" \
       "链子终于上去了。我蹬开车支撑架，跨上车，“哧哧哧”三声，车还是不动。究竟是哪里出了问题呢?我看看车轮，又看看链子，原来我把链条挂错地方了，车前轮应该是二挡，" \
       "而我却把链子挂到了三档上。我只好把链子从三挡齿轮子上拨下来，再把链子重新挂到二档上。" \
       "终于上好了链子，我再跨上车，可车还是动不了，这可怎么办呢!我看看这儿，又看看那儿，检查了好一会儿，没发现有什么不对的。没办法，我只好搬着车子准备走。" \
       "正在这时，我看见旁边的车子上的锁，对了，我还没开锁呢，我使劲敲了下脑袋，赶紧把车放下，把车钥匙插到锁孔，“卡嗒”一声，锁开了。" \
       "我重新跨上车，蹬开脚蹬，顺滑的骑上车，飞快地回家去了。"
# 基于TF-IDF算法进行关键词抽取
keywords = extract_tags(text,topK=4)
print("keywords by tfidf:")
# 输出抽取出的关键词
for keyword in keywords:
    print(keyword + "/",)

